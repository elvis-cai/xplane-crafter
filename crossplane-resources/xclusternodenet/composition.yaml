apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: clusternodenet
  labels:
    channel: demo
    purpose: hackathon
    provider: gcp
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: platform.awx.im/v1alpha1
    kind: XClusterNodeNet
  resources:
    - name: service-account
      base:
        apiVersion: cloudplatform.gcp.upbound.io/v1beta1
        kind: ServiceAccount
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: metadata.annotations[crossplane.io/external-name]
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: spec.forProvider.displayName
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.email
        toFieldPath: status.gke.serviceAccount
        policy:
          fromFieldPath: Required
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.id
        toFieldPath: status.gke.project
        transforms:
          - type: string
            string:
              type: Regexp
              regexp:
                match: projects\/(.+)\/serviceAccounts\/.*
                group: 1
        policy:
          fromFieldPath: Required
    - name: service-account-key
      base:
        apiVersion: cloudplatform.gcp.upbound.io/v1beta1
        kind: ServiceAccountKey
        spec:
          forProvider:
            serviceAccountIdSelector:
              matchControllerRef: true
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.uid
        toFieldPath: spec.writeConnectionSecretToRef.name
        transforms:
          - type: string
            string:
              fmt: "%s-sakey"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.writeConnectionSecretToRef.namespace
        toFieldPath: spec.writeConnectionSecretToRef.namespace
      
    - name: project-iam-member
      base:
        apiVersion: cloudplatform.gcp.upbound.io/v1beta1
        kind: ProjectIAMMember
        spec:
          forProvider:
            role: roles/container.admin
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.id
        toFieldPath: "metadata.annotations[crossplane.io/external-name]"
      - type: FromCompositeFieldPath
        fromFieldPath: status.gke.serviceAccount
        toFieldPath: spec.forProvider.member
        transforms:
          - type: string
            string:
              fmt: "serviceAccount:%s"
        policy:
          fromFieldPath: Required
      - type: FromCompositeFieldPath
        fromFieldPath: status.gke.project
        toFieldPath: spec.forProvider.project
        policy:
          fromFieldPath: Required
    - name: networkresource
      base:
        apiVersion: compute.gcp.upbound.io/v1beta1
        kind: Network
        spec:
          forProvider:
            autoCreateSubnetworks: false
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: metadata.labels
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.network
        toFieldPath: "metadata.annotations[crossplane.io/external-name]"
    - name: subnetworkresource
      base:
        apiVersion: compute.gcp.upbound.io/v1beta1
        kind: Subnetwork
        spec:
          forProvider:
            ipCidrRange: 10.1.10.0/24
            region: us-east4
            secondaryIpRange:
              - ipCidrRange: 192.168.10.0/24
                rangeName: us-east4-pods
              - ipCidrRange: 172.16.10.0/24
                rangeName: us-east4-services
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: spec.forProvider.networkSelector.matchLabels
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.subnetwork
        toFieldPath: "metadata.annotations[crossplane.io/external-name]"
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: metadata.labels
    - name: cp-service-account
      base:
        apiVersion: cloudplatform.gcp.upbound.io/v1beta1
        kind: ServiceAccount
        spec:
          forProvider:
            displayName: "poc crossplane gke node pool name"
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: metadata.labels
    - name: clusterresource  
      base:
        apiVersion: container.gcp.upbound.io/v1beta1
        kind: Cluster
        spec:
          forProvider:
            initialNodeCount: 1
            location: us-east4-b
            removeDefaultNodePool: true
            monitoringConfig:
              - enableComponents:
                  - SYSTEM_COMPONENTS

      patches:
      - fromFieldPath: metadata.uid
        toFieldPath: spec.writeConnectionSecretToRef.name
        transforms:
          - type: string
            string:
              fmt: "%s-gkecluster"
      - fromFieldPath: spec.writeConnectionSecretToRef.namespace
        toFieldPath: spec.writeConnectionSecretToRef.namespace
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: spec.forProvider.networkSelector.matchLabels
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: spec.forProvider.subnetworkSelector.matchLabels
      - type: FromCompositeFieldPath
        fromFieldPath: "metadata.annotations[crossplane.io/external-name]"
        toFieldPath: "metadata.annotations[crossplane.io/external-name]"
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: metadata.labels
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.cluster
        toFieldPath: metadata.name
    - name: node-pool
      base:
        apiVersion: container.gcp.upbound.io/v1beta1
        kind: NodePool
        spec:
          forProvider:
            nodeConfig:
              - machineType: e2-small
                oauthScopes:
                  - https://www.googleapis.com/auth/cloud-platform
                preemptible: true
            nodeCount: 1
      patches:  
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: spec.forProvider.clusterSelector.matchLabels
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.labels
        toFieldPath: spec.forProvider.nodeConfig[0].serviceAccountSelector.matchLabels
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.name
        toFieldPath: metadata.name

    - name: helm-provider-config
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              key: kubeconfig
          identity:
            type: GoogleApplicationCredentials
            source: Secret
            secretRef:
              key: private_key
      patches:
      - fromFieldPath: spec.id
        toFieldPath: metadata.name
      - fromFieldPath: spec.writeConnectionSecretToRef.namespace
        toFieldPath: spec.credentials.secretRef.namespace
      # This ProviderConfig uses the above GKE Cluster kubeconfig as
      # its credentials secret.
      - fromFieldPath: metadata.uid
        toFieldPath: spec.credentials.secretRef.name
        transforms:
          - type: string
            string:
              fmt: "%s-gkecluster"
      - type: FromCompositeFieldPath
        fromFieldPath: spec.writeConnectionSecretToRef.namespace
        toFieldPath: spec.identity.secretRef.namespace
      # This ProviderConfig uses the above ServiceAccount secret as
      # its credentials secret.
      - type: FromCompositeFieldPath
        fromFieldPath: metadata.uid
        toFieldPath: spec.identity.secretRef.name
        transforms:
          - type: string
            string:
              fmt: "%s-sakey"

    - name: helm-release
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations: 
            crossplane.io/external-name: wordpress
        spec:
          forProvider:
            chart:
              name: wordpress
              repository: https://turkenh.github.io/bitnami-charts
              version: 9.5.1
            namespace: wordpress
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.providerConfigRef.name